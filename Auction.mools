class Auction {

  int hBidder;
  int hBid;
  boolean ended;
  boolean won;
  
  //@ invariant true;
  //@ initial (hBidder == -1) && (hBid == 0) && !ended && !won;
  void Auction() {
    hBidder = -1;
    hBid = 0;
    ended = false;
    won = false;
  }
  
  //@ requires (hBidder != bidder) && (v > hBid) && !ended;
  //@ ensures (hBidder == bidder) && (hBid == v);
  void bid(int bidder, int v) {
    hBidder = bidder;
    hBid = v;
  }
  
  //@ requires (hBidder == bidder) && ended && !won;
  //@ ensures won;
  void win(int bidder) {
    won = true;
  }
  
  //@ requires !ended;
  //@ ensures ended;
  void finish() {
    ended = true;
  }

}
